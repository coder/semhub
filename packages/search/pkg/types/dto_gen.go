// Code generated by packages/scripts/src/generate-go.ts. DO NOT EDIT.
package types

import "time"

type SearchRequest struct {
	Embedding          []float32 `json:"embedding"`
	FilteredIssueCount float32   `json:"filteredIssueCount"`
	SqlQuery           string    `json:"sqlQuery"`
}

type ErrorResponse struct {
	Success bool   `json:"success"`
	Error   string `json:"error"`
}

type SuccessResponseDataAuthor struct {
	Name    string `json:"name"`
	HtmlUrl string `json:"htmlUrl"`
}

type SuccessResponseDataLabels struct {
	Name        string  `json:"name"`
	Description *string `json:"description"`
	Color       string  `json:"color"`
}

type SuccessResponseData struct {
	Id               string                      `json:"id"`
	Number           float32                     `json:"number"`
	Title            string                      `json:"title"`
	Author           *SuccessResponseDataAuthor  `json:"author"`
	IssueState       string                      `json:"issueState"`
	IssueStateReason *string                     `json:"issueStateReason"`
	IssueCreatedAt   time.Time                   `json:"issueCreatedAt"`
	IssueClosedAt    *time.Time                  `json:"issueClosedAt"`
	IssueUpdatedAt   time.Time                   `json:"issueUpdatedAt"`
	Labels           []SuccessResponseDataLabels `json:"labels"`
	IssueUrl         string                      `json:"issueUrl"`
	RepoName         string                      `json:"repoName"`
	RepoOwnerName    string                      `json:"repoOwnerName"`
	RepoUrl          string                      `json:"repoUrl"`
	RepoLastSyncedAt *time.Time                  `json:"repoLastSyncedAt"`
	CommentCount     float32                     `json:"commentCount"`
	RankingScore     float32                     `json:"rankingScore"`
}

type SuccessResponse struct {
	Data       []SuccessResponseData `json:"data"`
	TotalCount float32               `json:"totalCount"`
	Success    bool                  `json:"success"`
}
