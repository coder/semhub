/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as IndexImport } from './routes/index'
import { Route as ReposIndexImport } from './routes/repos/index'
import { Route as ReposSearchImport } from './routes/repos/search'
import { Route as RYourRepoImport } from './routes/r/your/repo'
import { Route as ROwnerRepoImport } from './routes/r/$owner/$repo'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReposIndexRoute = ReposIndexImport.update({
  path: '/repos/',
  getParentRoute: () => rootRoute,
} as any)

const ReposSearchRoute = ReposSearchImport.update({
  path: '/repos/search',
  getParentRoute: () => rootRoute,
} as any)

const RYourRepoRoute = RYourRepoImport.update({
  path: '/r/your/repo',
  getParentRoute: () => rootRoute,
} as any)

const ROwnerRepoRoute = ROwnerRepoImport.update({
  path: '/r/$owner/$repo',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/repos/search': {
      id: '/repos/search'
      path: '/repos/search'
      fullPath: '/repos/search'
      preLoaderRoute: typeof ReposSearchImport
      parentRoute: typeof rootRoute
    }
    '/repos/': {
      id: '/repos/'
      path: '/repos'
      fullPath: '/repos'
      preLoaderRoute: typeof ReposIndexImport
      parentRoute: typeof rootRoute
    }
    '/r/$owner/$repo': {
      id: '/r/$owner/$repo'
      path: '/r/$owner/$repo'
      fullPath: '/r/$owner/$repo'
      preLoaderRoute: typeof ROwnerRepoImport
      parentRoute: typeof rootRoute
    }
    '/r/your/repo': {
      id: '/r/your/repo'
      path: '/r/your/repo'
      fullPath: '/r/your/repo'
      preLoaderRoute: typeof RYourRepoImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/repos/search': typeof ReposSearchRoute
  '/repos': typeof ReposIndexRoute
  '/r/$owner/$repo': typeof ROwnerRepoRoute
  '/r/your/repo': typeof RYourRepoRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/repos/search': typeof ReposSearchRoute
  '/repos': typeof ReposIndexRoute
  '/r/$owner/$repo': typeof ROwnerRepoRoute
  '/r/your/repo': typeof RYourRepoRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/repos/search': typeof ReposSearchRoute
  '/repos/': typeof ReposIndexRoute
  '/r/$owner/$repo': typeof ROwnerRepoRoute
  '/r/your/repo': typeof RYourRepoRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/search'
    | '/repos/search'
    | '/repos'
    | '/r/$owner/$repo'
    | '/r/your/repo'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/search'
    | '/repos/search'
    | '/repos'
    | '/r/$owner/$repo'
    | '/r/your/repo'
  id:
    | '__root__'
    | '/'
    | '/search'
    | '/repos/search'
    | '/repos/'
    | '/r/$owner/$repo'
    | '/r/your/repo'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SearchRoute: typeof SearchRoute
  ReposSearchRoute: typeof ReposSearchRoute
  ReposIndexRoute: typeof ReposIndexRoute
  ROwnerRepoRoute: typeof ROwnerRepoRoute
  RYourRepoRoute: typeof RYourRepoRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SearchRoute: SearchRoute,
  ReposSearchRoute: ReposSearchRoute,
  ReposIndexRoute: ReposIndexRoute,
  ROwnerRepoRoute: ROwnerRepoRoute,
  RYourRepoRoute: RYourRepoRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/search",
        "/repos/search",
        "/repos/",
        "/r/$owner/$repo",
        "/r/your/repo"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/repos/search": {
      "filePath": "repos/search.tsx"
    },
    "/repos/": {
      "filePath": "repos/index.tsx"
    },
    "/r/$owner/$repo": {
      "filePath": "r/$owner/$repo.tsx"
    },
    "/r/your/repo": {
      "filePath": "r/your/repo.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
